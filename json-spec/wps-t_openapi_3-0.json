{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "OGC Testbed 14 EOC - Transactional Web Processing Service 2.0 with Billing and Quotation - REST/JSON Extension API",
    "version" : "0.2",
    "description" : "This is the Transactional Web Processing Service 2.0 with Billing and Quotation REST/JSON Extension API developped in the frame of the OGC Testbed 14 EOC. This work is based on the WPS REST binding (https://github.com/opengeospatial/wps-rest-binding) by Benjamin Pro√ü with updates from Patrick Jacques (Spacebel)",
    "contact" : {
      "name" : "Open Geospatial Consortium",
      "email" : "standards@opengeospatial.org",
      "url" : "http://www.opengeospatial.org"
    },
    "license" : {
      "name" : "CC-BY 4.0 license",
      "url" : "https://creativecommons.org/licenses/by/4.0/"
    }
  },
  "paths" : {
    "/api" : {
      "get" : {
        "summary" : "The API description - this document",
        "operationId" : "getApiDescription",
        "tags" : [ "Capabilities" ],
        "responses" : {
          "200" : {
            "description" : "The formal documentation of this API according to the OpenAPI specification, version 3.0. i.e., this document.",
            "content" : {
              "application/openapi+json;version=3.0" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes" : {
      "get" : {
        "summary" : "Retrieve available processes",
        "operationId" : "getProcesses",
        "tags" : [ "Processes" ],
        "responses" : {
          "200" : {
            "description" : "Information about the available processes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/processCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Deploy a process.",
        "operationId" : "deployProcess",
        "tags" : [ "Deploy" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "requestBody" : {
          "description" : "Mandatory deploy request JSON",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/deploy"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Process deployed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deployResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}" : {
      "get" : {
        "summary" : "Retrieve a process description",
        "operationId" : "getProcessDescription",
        "tags" : [ "ProcessDescription" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of a process",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "my.test.process"
        } ],
        "responses" : {
          "200" : {
            "description" : "A process description.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/processOffering"
                },
                "example" : {
                  "process" : {
                    "id" : "my.test.process",
                    "title" : "Example process",
                    "abstract" : "Example process",
                    "keywords" : [ "example", "process" ],
                    "inputs" : [ {
                      "id" : "input1",
                      "title" : "input title 1",
                      "formats" : [ {
                        "mimeType" : "application/json",
                        "maximumMegabytes" : 3,
                        "default" : true
                      }, {
                        "mimeType" : "application/x-zipped-shp",
                        "maximumMegabytes" : 3
                      } ]
                    } ],
                    "outputs" : [ {
                      "id" : "output1",
                      "title" : "output title 1",
                      "formats" : [ {
                        "mimeType" : "application/json",
                        "default" : true
                      }, {
                        "mimeType" : "application/x-zipped-shp"
                      } ]
                    } ],
                    "version" : 1.1,
                    "jobControlOptions" : [ "sync-execute", "async-execute" ],
                    "outputTransmission" : [ "value", "reference" ],
                    "executeEndpoint" : "https://virtserver.swaggerhub.com/geoprocessing/WPS/0.01/processes/my.test.process"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Undeploy a process",
        "operationId" : "undeployProcess",
        "tags" : [ "Undeploy" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of a process",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "my.test.process"
        } ],
        "responses" : {
          "200" : {
            "description" : "Process undeployed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/undeployResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/jobs" : {
      "get" : {
        "summary" : "Retrieve the list of jobs for a process.",
        "operationId" : "getJobList",
        "tags" : [ "JobList" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of a process.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of jobs for this process.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/jobList"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Execute a process.",
        "operationId" : "execute",
        "tags" : [ "Execute" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of a process.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Mandatory execute request JSON",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/execute"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Started execution. Created job.",
            "headers" : {
              "Location" : {
                "schema" : {
                  "type" : "string"
                },
                "description" : "URL to check the status of the execution/job."
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/jobs/{jobID}" : {
      "get" : {
        "summary" : "Retrieve the status of a job",
        "operationId" : "getStatus",
        "tags" : [ "Status" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of a process",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "jobID",
          "description" : "The id of a job",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The status of a job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/statusInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the job with id {jobID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Dismiss a job",
        "operationId" : "dismiss",
        "tags" : [ "Dismiss" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of a process",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "jobID",
          "description" : "The id of a job",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The status of a job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/statusInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the job with id {jobID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/jobs/{jobID}/result" : {
      "get" : {
        "summary" : "Retrieve the result(s) of a job",
        "operationId" : "getResult",
        "tags" : [ "Result" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of a process",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "jobID",
          "description" : "The id of a job",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The result of a job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/result"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the job with id {jobID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/quotations" : {
      "get" : {
        "summary" : "Retrieve the list of quotation ids for a given process.",
        "operationId" : "getQuotationList",
        "tags" : [ "QuotationList" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process.",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "A list of quotation ids for this process.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotationList"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Request a quotation for a given process.",
        "operationId" : "quote",
        "tags" : [ "Quote" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process.",
            "required" : true,
            "schema" : {
              "type" : "integer"
            }
          }
        ],
        "requestBody" : {
          "description" : "Mandatory execute request JSON",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/execute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Result of the quotation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotation"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/quotations/{quotationID}" : {
      "get" : {
        "summary" : "Retrieve quotation information",
        "operationId" : "getQuotation",
        "tags" : [ "Quotation" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "quotationID",
            "description" : "The id of a quotation",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Quotation information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotation"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the quotation with id {quotationID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Execute a quoted process",
        "operationId" : "executeQuotation",
        "tags" : [ "Execute (as per Quotation)" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "quotationID",
            "description" : "The id of a quotation",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Started execution. Created job.",
            "headers" : {
              "Location" : {
                "schema" : {
                  "type" : "string"
                },
                "description" : "URL to check the status of the execution/job."
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the quotation with id {quotationID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "410" : {
            "description" : "The quotation with id {quotationID} expired.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/visibility" : {
      "get" : {
        "summary" : "Retrieve the visibility status for a process.",
        "operationId" : "getVisibility",
        "tags" : [ "Visibility" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of a process.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The visibility status (public or private) for this process.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/visibility"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Change the visibility status for a process.",
        "operationId" : "changeVisibility",
        "tags" : [ "ChangeVisibility" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of a process.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "New visibility parameters as JSON",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/visibility"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Process visibility status updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/visibility"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/quotations" : {
      "get" : {
        "summary" : "Retrieve the list of all quotation ids.",
        "operationId" : "getQuotationList",
        "tags" : [ "QuotationList" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "responses" : {
          "200" : {
            "description" : "A list of quotation ids for all server processes.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotationList"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/quotations/{quotationID}" : {
      "get" : {
        "summary" : "Retrieve quotation information",
        "operationId" : "getQuotation",
        "tags" : [ "Quotation" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "quotationID",
            "description" : "The id of a quotation",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Quotation information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotation"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The quotation with id {quotationID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Execute a quoted process",
        "operationId" : "executeQuotation",
        "tags" : [ "Execute (as per Quotation)" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "quotationID",
            "description" : "The id of a quotation",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Started execution. Created job.",
            "headers" : {
              "Location" : {
                "schema" : {
                  "type" : "string"
                },
                "description" : "URL to check the status of the execution/job."
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The quotation with id {quotationID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "410" : {
            "description" : "The quotation with id {quotationID} expired.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/bills" : {
      "get" : {
        "summary" : "Retrieve the list of all bills ids.",
        "operationId" : "getBillList",
        "tags" : [ "BillList" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "responses" : {
          "200" : {
            "description" : "A list of bills ids.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/billList"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/bills/{billID}" : {
      "get" : {
        "summary" : "Retrieve bill information",
        "operationId" : "getBill",
        "tags" : [ "Bill" ],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "billID",
            "description" : "The id of a bill",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Bill information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/bill"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The bill with id {billID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/applications" : {
      "get" : {
        "summary" : "Retrieve information about available application packages",
        "description" : "Retrieve summary of all or part (filters) of the Application Packages available in the EMS Appllication Package Registry",
        "operationId" : "getApplications",
        "tags" : [ "Applications" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "filters",
          "description" : "Find application by filters (i.e. cwlId, cwlLabel, cwlDoc)",
          "schema" : {
            "type" : "string"
          },
          "example" : "cwlId=multisensor_ndvi_ipt"
        } ],
        "responses" : {
          "200" : {
            "description" : "Information about the available application packages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/applicationCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Register an application package.",
        "operationId" : "registerApplication",
        "tags" : [ "Register" ],
        "requestBody" : {
          "description" : "Mandatory register request JSON",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/register"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Application Package registered.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/registerResult"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{id}" : {
      "get" : {
        "summary" : "Retrieve an Application Package",
        "operationId" : "getApplication",
        "tags" : [ "Application Package" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of the application",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "application123"
        } ],
        "responses" : {
          "200" : {
            "description" : "An application package.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/applicationPackage"
                }
              }
            }
          },
          "404" : {
            "description" : "The application with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Unregister an application",
        "operationId" : "deregisterApplication",
        "tags" : [ "Deregister" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "The id of the application",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "example" : "application123"
        } ],
        "responses" : {
          "200" : {
            "description" : "Application Package deregistered.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deregisterResult"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme": "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "schemas" : {
      "exception" : {
        "type" : "object",
        "required" : [ "code" ],
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "processCollection" : {
        "type" : "object",
        "required" : [ "processes" ],
        "properties" : {
          "processes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/processSummary"
            }
          }
        }
      },
      "processSummary" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/descriptionType"
        }, {
          "type" : "object",
          "required" : [ "version" ],
          "properties" : {
            "version" : {
              "type" : "string"
            },
            "jobControlOptions" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/jobControlOptions"
              }
            },
            "processDescriptionURL" : {
              "type" : "string"
            }
          }
        } ]
      },
      "deploy" : {
        "type" : "object",
        "required" : [ "processOffering", "deploymentProfile" ],
        "properties" : {
          "processOffering" : {
            "$ref" : "#/components/schemas/processOffering"
          },
          "deploymentProfile" : {
            "$ref" : "#/components/schemas/deploymentProfile"
          }
        }
      },
      "deploymentProfile" : {
        "type" : "object",
        "required" : [ "deploymentProfileName" ],
        "properties" : {
          "deploymentProfileName" : {
            "type" : "string"
          },
          "executionUnit" : {
            "$ref" : "#/components/schemas/executionUnit"
          },
          "profileExtension" : {
            "type" : "object"
          }
        }
      },
      "executionUnit" : {
        "oneOf" : [ {
          "type" : "object",
          "required" : [ "package" ],
          "properties" : {
            "package" : {
              "type" : "object"
            }
          }
        }, {
          "type" : "object",
          "required" : [ "reference" ],
          "properties" : {
            "reference" : {
              "type" : "string"
            }
          }
        } ]
      },
      "deployResult" : {
        "type" : "object",
        "required" : [ "deploymentDone" ],
        "properties" : {
          "deploymentDone" : {
            "type" : "string"
          },
          "processSummary" : {
            "$ref" : "#/components/schemas/processSummary"
          }
        }
      },
      "undeployResult" : {
        "type" : "object",
        "required" : [ "undeploymentDone" ],
        "properties" : {
          "deploymentDone" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "processOffering" : {
        "type" : "object",
        "required" : [ "process" ],
        "properties" : {
          "process" : {
            "$ref" : "#/components/schemas/process"
          }
        }
      },
      "process" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/descriptionType"
        }, {
          "type" : "object",
          "required" : [ "id" ],
          "properties" : {
            "inputs" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/LiteralInputType"
                }, {
                  "$ref" : "#/components/schemas/ComplexInputType"
                }, {
                  "$ref" : "#/components/schemas/BoundingBoxInputType"
                } ]
              }
            },
            "outputs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/outputDescription"
              }
            },
            "version" : {
              "type" : "string"
            },
            "jobControlOptions" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/jobControlOptions"
              }
            },
            "outputTransmission" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/transmissionMode"
              }
            },
            "executeEndpoint" : {
              "type" : "string",
              "format" : "url"
            }
          }
        } ]
      },
      "jobControlOptions" : {
        "type" : "string",
        "enum" : [ "sync-execute", "async-execute" ]
      },
      "transmissionMode" : {
        "type" : "string",
        "enum" : [ "value", "reference" ]
      },
      "inputDescription" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LiteralInputType"
        }, {
          "$ref" : "#/components/schemas/ComplexInputType"
        }, {
          "$ref" : "#/components/schemas/BoundingBoxInputType"
        } ]
      },
      "outputDescription" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/dataDescriptionType"
        } ]
      },
      "LiteralInputType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/dataDescriptionType"
        }, {
          "type" : "object",
          "required" : [ "formats" ],
          "properties" : {
            "minOccurs" : {
              "type" : "integer"
            },
            "maxOccurs" : {
              "type" : "integer"
            },
            "LiteralDataDomain" : {
              "type" : "object"
            }
          }
        } ]
      },
      "ComplexInputType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/dataDescriptionType"
        }, {
          "type" : "object",
          "required" : [ "formats" ],
          "properties" : {
            "minOccurs" : {
              "type" : "integer"
            },
            "maxOccurs" : {
              "type" : "integer"
            }
          }
        } ]
      },
      "BoundingBoxInputType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/dataDescriptionType"
        }, {
          "type" : "object",
          "required" : [ "formats" ],
          "properties" : {
            "minOccurs" : {
              "type" : "integer"
            },
            "maxOccurs" : {
              "type" : "integer"
            }
          }
        } ]
      },
      "formatDescription" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/format"
        }, {
          "type" : "object",
          "properties" : {
            "maximumMegabytes" : {
              "type" : "integer"
            },
            "default" : {
              "type" : "boolean",
              "default" : false
            }
          }
        } ]
      },
      "format" : {
        "type" : "object",
        "required" : [ "mimeType" ],
        "properties" : {
          "mimeType" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "string"
          },
          "encoding" : {
            "type" : "string"
          }
        }
      },
      "dataDescriptionType" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/descriptionType"
        }, {
          "type" : "object",
          "required" : [ "id", "formats" ],
          "properties" : {
            "formats" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/formatDescription"
              }
            }
          }
        } ]
      },
      "descriptionType" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "abstract" : {
            "type" : "string"
          },
          "keywords" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "metadata" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/metadata"
            }
          },
          "additionalParameters": {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/additionalParameters"
            }
          }
        }
      },
      "metadata" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          }
        }
      },
      "additionalParameters" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "jobList" : {
        "type" : "object",
        "properties" : {
          "jobs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "quotationList" : {
        "type" : "object",
        "properties" : {
          "quotations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "billList" : {
        "type" : "object",
        "properties" : {
          "bills" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "quotation" : {
        "type" : "object",
        "required" : [ "id", "processId", "price", "currency", "expire", "created", "userId", "processParameters" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the quotation"
          },
          "title" : {
            "type" : "string",
            "description" : "A name of the quotation"
          },
          "description" : {
            "type" : "string",
            "description" : "A description of what the quotation is related"
          },
          "processId" : {
            "type" : "string",
            "description" : "The id of the parent process"
          },
          "price" : {
            "type" : "number",
            "format" : "double"
          },
          "currency" : {
            "type" : "string",
            "description": "Currency code in ISO 4217 format"
          },
          "expire" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the quotation will expire"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the quotation was created"
          },
          "userId" : {
            "type" : "string",
            "description" : "User id that requested this quotation"
          },
          "details" : {
            "type" : "string"
          },
          "estimatedTime" : {
            "type" : "string",
            "description" : "The estimated duration for the process to be performed (in ISO 8601 duration format)"
          },
          "processParameters" : {
            "$ref" : "#/components/schemas/execute"
          },
          "alternativeQuotations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alternateQuotation"
            }
          }
        },
        "example" : {
          "id" : "Q-12345-A",
          "title" : "Mosaicing",
          "description" : "High resolutionmosaicing(10 meters)",
          "processId" : "P-12345",
          "price" : "15",
          "currency" : "EUR",
          "created" : "2018-05-23T17:24:37Z",
          "expire" : "2018-06-15T10:00:00Z",
          "userId" : "U-XXX-YYY-Z",
          "details" : "Toulouse area  10000 km2  Sentinel-2",
          "estimatedTime" : "P5M",
          "processParameters" : {
            "inputs" : [ {
              "id" : "input1",
              "title" : "input title 1",
              "formats" : [ {
                "mimeType" : "application/json",
                "maximumMegabytes" : 3,
                "default" : true
              }, {
                "mimeType" : "application/x-zipped-shp",
                "maximumMegabytes" : 3
              } ]
            } ],
            "outputs" : [ {
              "id" : "output1",
              "title" : "output title 1",
              "formats" : [ {
                "mimeType" : "application/json",
                "default" : true
              }, {
                "mimeType" : "application/x-zipped-shp"
              } ]
            } ]
          },
          "alternativeQuotations" : {
            "id" : "Q12345B",
            "title" : "Mosaicing(lowpriority)",
            "description" : "High resolutionmosaicing(10 meters)",
            "price" : "5",
            "currency" : "EUR",
            "expire" : "2018-06-15T10:00:00Z",
            "details" : "Toulouse area ‚Äì 10000 km2 ‚Äì Sentinel-2",
            "estimatedTime" : "P20M"
          }
        }
      },
      "alternateQuotation" : {
        "type" : "object",
        "required" : [ "id", "price", "currency", "expire", "created" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the quotation"
          },
          "title" : {
            "type" : "string",
            "description" : "The name of the quotation"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of what the quotation is related to"
          },
          "price" : {
            "type" : "number",
            "format" : "double"
          },
          "currency" : {
            "type" : "string",
            "description": "Currency code in ISO 4217 format"
          },
          "expire" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the quotation will expire"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the quotation was created"
          },
          "details" : {
            "type" : "string"
          },
          "estimatedTime" : {
            "type" : "string",
            "description" : "The estimated duration for the process to be performed (in ISO 8601 duration format)"
          }
        }
      },
      "bill" : {
        "type" : "object",
        "required" : [ "id", "title", "price", "currency", "created", "userId" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the bill"
          },
          "title" : {
            "type" : "string",
            "description" : "The name of the bill"
          },
          "description" : {
            "type" : "string",
            "description" : "A description of what is charged"
          },
          "price" : {
            "type" : "number",
            "format" : "double"
          },
          "currency" : {
            "type" : "string",
            "description": "Currency code in ISO 4217 format"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the bill was created"
          },
          "userId" : {
            "type" : "string",
            "description" : "User id that is charged for this bill"
          },
          "quotationId" : {
            "type" : "string",
            "description" : "Reference to the quotation id corresponding to this bill"
          }
        },
        "example" : {
          "id" : "B-12345-A",
          "title" : "Mosaicing",
          "description" : "High resolutionmosaicing (10 meters)",
          "price" : "15",
          "currency" : "EUR",
          "created" : "2018-05-23T17:24:37Z",
          "userId" : "U-XXX-YYY-Z",
          "quotationId" : "Q-12345-A"
        }
      },
      "execute" : {
        "type" : "object",
        "required" : [ "outputs" ],
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/input"
            }
          },
          "outputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/output"
            }
          }
        }
      },
      "input" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/dataType"
        }, {
          "type" : "object",
          "required" : [ "value" ],
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "output" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/dataType"
        }, {
          "type" : "object",
          "properties" : {
            "transmissionMode" : {
              "$ref" : "#/components/schemas/transmissionMode"
            }
          }
        } ]
      },
      "dataType" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "format" : {
            "$ref" : "#/components/schemas/format"
          }
        }
      },
      "statusInfo" : {
        "type" : "object",
        "required" : [ "status" ],
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "accepted", "running", "successful", "failed" ]
          },
          "message" : {
            "type" : "string"
          },
          "progress" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 100
          }
        }
      },
      "result" : {
        "type" : "object",
        "required" : [ "outputs" ],
        "properties" : {
          "outputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/outputInfo"
            }
          }
        }
      },
      "outputInfo" : {
        "type" : "object",
        "required" : [ "id", "value", "x" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "applicationCollection" : {
        "type" : "object",
        "required" : [ "applications" ],
        "properties" : {
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/applicationSummary"
            }
          }
        }
      },
      "applicationSummary" : {
        "type" : "object",
        "required" : [ "cwlId" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "cwlId" : {
            "type" : "string"
          },
          "cwlLabel" : {
            "type" : "string"
          },
          "cwlDoc" : {
            "type" : "string"
          }
        }
      },
      "visibility" : {
        "type" : "object",
        "required" : [ "value" ],
        "properties" : {
          "value" : {
            "type" : "string",
            "enum" : [ "public", "private" ]
          }
        }
      },
      "deregisterResult" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "applicationPackage" : {
        "type" : "object"
      },
      "register" : {
        "type" : "object",
        "required" : [ "package" ],
        "properties" : {
          "package" : {
            "$ref" : "#/components/schemas/applicationPackage"
          }
        }
      },
      "registerResult" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      }
    }
  },
  "tags" : [ {
    "name" : "Capabilities",
    "description" : "Essential characteristics of this API including information about the data."
  }, {
    "name" : "Processes",
    "description" : "Access to processes."
  } ],
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/geoprocessing/WPS/0.1"
  } ]
}