{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "OGC Testbed 14 EOC - Transactional Web Processing Service 2.0 with Billing and Quotation - REST/JSON Extension API",
    "version" : "0.2",
    "description" : "This is the Transactional Web Processing Service 2.0 with Billing and Quotation REST/JSON Extension API developped in the frame of the OGC Testbed 14 EOC. This work is based on the WPS REST binding (https://github.com/opengeospatial/wps-rest-binding) by Benjamin Proß with updates from Patrick Jacques (Spacebel), Jerome Gasperi (Geomatys) and Christophe Noël (Spacebel).",
    "contact" : {
      "name" : "Open Geospatial Consortium",
      "email" : "standards@opengeospatial.org",
      "url" : "http://www.opengeospatial.org"
    },
    "license" : {
      "name" : "CC-BY 4.0 license",
      "url" : "https://creativecommons.org/licenses/by/4.0/"
    }
  },
  "paths" : {
    "/" : {
      "get" : {
        "summary" : "landing page of this API",
        "description" : "The landing page provides links to the API definition, the Conformance statements and the metadata about the processes offered by this API",
        "operationId" : "getLandingPage",
        "tags" : [
          "LandingPage"
        ],
        "parameters" : [
          {
            "$ref" : "#/components/parameters/f"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "undefined",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/landingPage"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "undefined",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/processes" : {
      "get" : {
        "summary" : "Retrieve available processes",
        "operationId" : "getProcesses",
        "tags" : ["Processes"],
        "responses" : {
          "200" : {
            "description" : "Information about the available processes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/processCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Deploy a process.",
        "operationId" : "deployProcess",
        "tags" : ["Deploy"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "requestBody" : {
          "description" : "Mandatory deploy request JSON",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/deploy"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Process deployed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploymentResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}" : {
      "get" : {
        "summary" : "Retrieve a process description",
        "operationId" : "getProcessDescription",
        "tags" : ["ProcessDescription"],
        "parameters" : [{
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process",
            "required" : true,
            "schema" : {
              "type" : "string"
            },
            "example" : "buffer"
          }],
        "responses" : {
          "200" : {
            "description" : "A process description.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/processOffering"
                },
                "example" : {
                  "process" : {
                    "id" : "buffer",
                    "title" : "Buffer process",
                    "abstract" : "Buffer process",
                    "keywords" : ["process", "buffer"],
                    "inputs" : [{
                        "id" : "features",
                        "title" : "features",
                        "abstract" : "The features to buffer",
                        "formats" : [{
                            "mimeType" : "application/json",
                            "maximumMegabytes" : 3,
                            "default" : true
                          }, {
                            "mimeType" : "application/x-zipped-shp",
                            "maximumMegabytes" : 3
                          }]
                      }, {
                        "id" : "width",
                        "title" : "width",
                        "abstract" : "The buffer width",
                        "formats" : [{
                            "mimeType" : "text/plain"
                          }],
                        "literalDataDomain" : {
                          "dataType" : "double",
                          "valueDefinition" : {
                            "defaultValue" : "1000"
                          },
                          "uom" : "meters"
                        }
                      }],
                    "outputs" : [{
                        "id" : "result",
                        "title" : "result",
                        "abstract" : "The buffered features",
                        "formats" : [{
                            "mimeType" : "application/json",
                            "default" : true
                          }, {
                            "mimeType" : "application/x-zipped-shp"
                          }]
                      }],
                    "version" : 1.1,
                    "jobControlOptions" : ["sync-execute", "async-execute"],
                    "outputTransmission" : ["value", "reference"],
                    "executeEndpoint" : "https://virtserver.swaggerhub.com/geoprocessing/WPS/0.01/processes/buffer"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Undeploy a process",
        "operationId" : "undeployProcess",
        "tags" : ["Undeploy"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [{
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process",
            "required" : true,
            "schema" : {
              "type" : "string"
            },
            "example" : "my.test.process"
          }],
        "responses" : {
          "200" : {
            "description" : "Process undeployed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/undeploymentResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/jobs" : {
      "get" : {
        "summary" : "Retrieve the list of jobs for a process.",
        "operationId" : "getJobList",
        "tags" : ["JobList"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [{
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process.",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }],
        "responses" : {
          "200" : {
            "description" : "A list of jobs for this process.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/jobCollection"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Execute a process.",
        "operationId" : "execute",
        "tags" : ["Execute"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [{
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process.",
            "required" : true,
            "schema" : {
              "type" : "integer"
            }
          }],
        "requestBody" : {
          "description" : "Mandatory execute request JSON",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/execute"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Started execution. Created job.",
            "headers" : {
              "Location" : {
                "schema" : {
                  "type" : "string"
                },
                "description" : "URL to check the status of the execution/job."
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/jobs/{jobID}" : {
      "get" : {
        "summary" : "Retrieve the status of a job",
        "operationId" : "getStatus",
        "tags" : ["Status"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [{
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "in" : "path",
            "name" : "jobID",
            "description" : "The id of a job",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }],
        "responses" : {
          "200" : {
            "description" : "The status of a job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/statusInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the job with id {jobID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Dismiss a job",
        "operationId" : "dismiss",
        "tags" : ["Dismiss"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [{
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "in" : "path",
            "name" : "jobID",
            "description" : "The id of a job",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }],
        "responses" : {
          "200" : {
            "description" : "The status of a job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/statusInfo"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the job with id {jobID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/jobs/{jobID}/result" : {
      "get" : {
        "summary" : "Retrieve the result(s) of a job",
        "operationId" : "getResult",
        "tags" : ["Result"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [{
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }, {
            "in" : "path",
            "name" : "jobID",
            "description" : "The id of a job",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }],
        "responses" : {
          "200" : {
            "description" : "The result of a job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/result"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the job with id {jobID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "500" : {
            "description" : "An exception happened during the execution of the job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "https://raw.githubusercontent.com/bpross-52n/wps-rest-oas/master/schemas/exception.yaml"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/quotations" : {
      "get" : {
        "summary" : "Retrieve the list of quotation ids for a given process.",
        "operationId" : "getQuotationList",
        "tags" : ["QuotationList"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process.",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "A list of quotation ids for this process.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotationList"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Request a quotation for a given process.",
        "operationId" : "quote",
        "tags" : ["Quote"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process.",
            "required" : true,
            "schema" : {
              "type" : "integer"
            }
          }
        ],
        "requestBody" : {
          "description" : "Mandatory execute request JSON",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/execute"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Result of the quotation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotation"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/quotations/{quotationID}" : {
      "get" : {
        "summary" : "Retrieve quotation information",
        "operationId" : "getQuotation",
        "tags" : ["Quotation"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "quotationID",
            "description" : "The id of a quotation",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Quotation information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotation"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the quotation with id {quotationID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Execute a quoted process",
        "operationId" : "executeQuotation",
        "tags" : ["Execute (as per Quotation)"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "in" : "path",
            "name" : "quotationID",
            "description" : "The id of a quotation",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Started execution. Created job.",
            "headers" : {
              "Location" : {
                "schema" : {
                  "type" : "string"
                },
                "description" : "URL to check the status of the execution/job."
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} or the quotation with id {quotationID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "410" : {
            "description" : "The quotation with id {quotationID} expired.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/processes/{id}/visibility" : {
      "get" : {
        "summary" : "Retrieve the visibility status for a process.",
        "operationId" : "getVisibility",
        "tags" : ["Visibility"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [{
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process.",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }],
        "responses" : {
          "200" : {
            "description" : "The visibility status (public or private) for this process.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/visibility"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Change the visibility status for a process.",
        "operationId" : "changeVisibility",
        "tags" : ["ChangeVisibility"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [{
            "in" : "path",
            "name" : "id",
            "description" : "The id of a process.",
            "required" : true,
            "schema" : {
              "type" : "integer"
            }
          }],
        "requestBody" : {
          "description" : "New visibility parameters as JSON",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/visibility"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Process visibility status updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/visibility"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The process with id {id} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/quotations" : {
      "get" : {
        "summary" : "Retrieve the list of all quotation ids.",
        "operationId" : "getQuotationList",
        "tags" : ["QuotationList"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "responses" : {
          "200" : {
            "description" : "A list of quotation ids for all server processes.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotationList"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/quotations/{quotationID}" : {
      "get" : {
        "summary" : "Retrieve quotation information",
        "operationId" : "getQuotation",
        "tags" : ["Quotation"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "quotationID",
            "description" : "The id of a quotation",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Quotation information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quotation"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The quotation with id {quotationID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Execute a quoted process",
        "operationId" : "executeQuotation",
        "tags" : ["Execute (as per Quotation)"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "quotationID",
            "description" : "The id of a quotation",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Started execution. Created job.",
            "headers" : {
              "Location" : {
                "schema" : {
                  "type" : "string"
                },
                "description" : "URL to check the status of the execution/job."
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The quotation with id {quotationID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "410" : {
            "description" : "The quotation with id {quotationID} expired.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/bills" : {
      "get" : {
        "summary" : "Retrieve the list of all bills ids.",
        "operationId" : "getBillList",
        "tags" : ["BillList"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "responses" : {
          "200" : {
            "description" : "A list of bills ids.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/billList"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/bills/{billID}" : {
      "get" : {
        "summary" : "Retrieve bill information",
        "operationId" : "getBill",
        "tags" : ["Bill"],
        "security" : [
          {
            "bearerAuth" : []
          }
        ],
        "parameters" : [
          {
            "in" : "path",
            "name" : "billID",
            "description" : "The id of a bill",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Bill information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/bill"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "403" : {
            "description" : "Unauthorized.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "404" : {
            "description" : "The bill with id {billID} does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    },
    "/conformance" : {
      "get" : {
        "summary" : "information about standards that this API conforms to",
        "description" : "list all requirements classes specified in a standard (e.g., WPS REST/JSON Binding Core) that the server conforms to",
        "operationId" : "getRequirementsClasses",
        "tags" : ["Capabilities"],
        "responses" : {
          "200" : {
            "description" : "the URIs of all requirements classes supported by the server",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/req-classes"
                }
              }
            }
          },
          "default" : {
            "description" : "An error occured.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "schemas" : {
      "landingPage" : {
        "type" : "object",
        "required" : [
          "links"
        ],
        "properties" : {
          "links" : {
            "type" : "array",
            "jobs" : {
              "$ref" : "#/components/schemas/jsonLink"
            }
          }
        }
      },
      "jsonLink": {
         "type": "object",
         "required": [
           "href"
         ],
         "properties": {
           "href": {
             "type": "string",
             "format": "uri"
           },
           "rel": {
             "type": "string",
             "example": "next"
           },
           "type": {
             "type": "string",
             "example": "application/gml+xml;version=3.2"
           },
           "hreflang": {
             "type": "string",
             "example": "el"
           },
           "title": {
             "type": "string",
             "example": "Trierer Strasse 70, 53115 Bonn"
           }
         }
       },
      "exception" : {
        "type" : "object",
        "required" : ["code"],
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "req-classes" : {
        "type" : "object",
        "required" : [
          "conformsTo"
        ],
        "properties" : {
          "conformsTo" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "http://www.opengis.net/spec/wps-rest/1.0/req/core"
            }
          }
        }
      },
      "processCollection" : {
        "type" : "object",
        "required" : ["processes"],
        "properties" : {
          "processes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/processSummary"
            }
          }
        }
      },
      "processSummary" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/descriptionType"
          }, {
            "type" : "object",
            "required" : ["version"],
            "properties" : {
              "version" : {
                "type" : "string"
              },
              "jobControlOptions" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/jobControlOptions"
                }
              },
              "outputTransmission" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/transmissionMode"
                }
              },
              "processDescriptionURL" : {
                "type" : "string"
              }
            }
          }]
      },
      "deploy" : {
        "type" : "object",
        "required" : ["processOffering", "deploymentProfile"],
        "properties" : {
          "immediateDeployment" : {
            "type" : "boolean",
            "default" : "true"
          },
          "processDescription" : {
            "$ref" : "#/components/schemas/processDescriptionChoiceType"
          },
          "executionUnit" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/executionUnit"
            }
          },
          "deploymentProfileName" : {
            "type" : "string"
          }
        }
      },
      "executionUnit" : {
        "oneOf" : [{
            "type" : "object",
            "required" : ["reference"],
            "properties" : {
              "reference" : {
                "$ref" : "#/components/schemas/reference"
              }
            }
          }, {
            "type" : "object",
            "required" : ["unit"],
            "properties" : {
              "unit" : {
                "type" : "object"
              }
            }
          }]
      },
      "deploymentResult" : {
        "type" : "object",
        "required" : ["id"],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "processSummary" : {
            "$ref" : "#/components/schemas/processSummary"
          }
        }
      },
      "undeploymentResult" : {
        "type" : "object",
        "required" : ["id"],
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "processDescriptionChoiceType" : {
        "oneOf" : [{
            "type" : "object",
            "required" : ["reference"],
            "properties" : {
              "reference" : {
                "$ref" : "#/components/schemas/reference"
              }
            }
          }, {
            "type" : "object",
            "required" : ["processOffering"],
            "properties" : {
              "processOffering" : {
                "$ref" : "#/components/schemas/processOffering"
              }
            }
          }]
      },
      "reference" : {
        "type" : "object",
        "required" : ["href"],
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "mimeType" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "string"
          },
          "encoding" : {
            "type" : "string"
          }
        }
      },
      "processOffering" : {
        "type" : "object",
        "required" : ["process"],
        "properties" : {
          "process" : {
            "$ref" : "#/components/schemas/process"
          }
        }
      },
      "process" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/descriptionType"
          }, {
            "type" : "object",
            "required" : ["id"],
            "properties" : {
              "inputs" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [{
                      "$ref" : "#/components/schemas/literalInputType"
                    }, {
                      "$ref" : "#/components/schemas/complexInputType"
                    }, {
                      "$ref" : "#/components/schemas/boundingBoxInputType"
                    }]
                }
              },
              "outputs" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/outputDescription"
                }
              },
              "version" : {
                "type" : "string"
              },
              "jobControlOptions" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/jobControlOptions"
                }
              },
              "outputTransmission" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/transmissionMode"
                }
              },
              "executeEndpoint" : {
                "type" : "string",
                "format" : "url"
              }
            }
          }]
      },
      "jobControlOptions" : {
        "type" : "string",
        "enum" : ["sync-execute", "async-execute"]
      },
      "transmissionMode" : {
        "type" : "string",
        "enum" : ["value", "reference"]
      },
      "outputDescription" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/dataDescriptionType"
          }]
      },
      "literalInputType" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/dataDescriptionType"
          }, {
            "type" : "object",
            "required" : ["formats"],
            "properties" : {
              "minOccurs" : {
                "type" : "integer"
              },
              "maxOccurs" : {
                "type" : "integer"
              },
              "LiteralDataDomain" : {
                "type" : "object"
              }
            }
          }]
      },
      "complexInputType" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/dataDescriptionType"
          }, {
            "type" : "object",
            "required" : ["formats"],
            "properties" : {
              "minOccurs" : {
                "type" : "integer"
              },
              "maxOccurs" : {
                "type" : "integer"
              }
            }
          }]
      },
      "boundingBoxInputType" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/dataDescriptionType"
          }, {
            "type" : "object",
            "required" : ["formats"],
            "properties" : {
              "minOccurs" : {
                "type" : "integer"
              },
              "maxOccurs" : {
                "type" : "integer"
              }
            }
          }]
      },
      "formatDescription" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/format"
          }, {
            "type" : "object",
            "properties" : {
              "maximumMegabytes" : {
                "type" : "integer"
              },
              "default" : {
                "type" : "boolean",
                "default" : false
              }
            }
          }]
      },
      "format" : {
        "type" : "object",
        "required" : ["mimeType"],
        "properties" : {
          "mimeType" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "string"
          },
          "encoding" : {
            "type" : "string"
          }
        }
      },
      "dataDescriptionType" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/descriptionType"
          }, {
            "type" : "object",
            "required" : ["id", "formats"],
            "properties" : {
              "formats" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/formatDescription"
                }
              }
            }
          }]
      },
      "descriptionType" : {
        "type" : "object",
        "required" : ["id"],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "abstract" : {
            "type" : "string"
          },
          "keywords" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "metadata" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/metadata"
            }
          },
          "additionalParameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/additionalParameters"
            }
          }
        }
      },
      "metadata" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          }
        }
      },
      "additionalParameters" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "jobCollection" : {
        "type" : "object",
        "properties" : {
          "jobs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "quotationList" : {
        "type" : "object",
        "properties" : {
          "quotations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "billList" : {
        "type" : "object",
        "properties" : {
          "bills" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "quotation" : {
        "type" : "object",
        "required" : ["id", "processId", "price", "currency", "expire", "created", "userId", "processParameters"],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the quotation"
          },
          "title" : {
            "type" : "string",
            "description" : "A name of the quotation"
          },
          "description" : {
            "type" : "string",
            "description" : "A description of what the quotation is related"
          },
          "processId" : {
            "type" : "string",
            "description" : "The id of the parent process"
          },
          "price" : {
            "type" : "number",
            "format" : "double"
          },
          "currency" : {
            "type" : "string",
            "description" : "Currency code in ISO 4217 format"
          },
          "expire" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the quotation will expire"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the quotation was created"
          },
          "userId" : {
            "type" : "string",
            "description" : "User id that requested this quotation"
          },
          "details" : {
            "type" : "string"
          },
          "estimatedTime" : {
            "type" : "string",
            "description" : "The estimated duration for the process to be performed (in ISO 8601 duration format)"
          },
          "processParameters" : {
            "$ref" : "#/components/schemas/execute"
          },
          "alternativeQuotations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alternateQuotation"
            }
          }
        },
        "example" : {
          "id" : "Q-12345-A",
          "title" : "Mosaicing",
          "description" : "High resolutionmosaicing(10 meters)",
          "processId" : "P-12345",
          "price" : "15",
          "currency" : "EUR",
          "created" : "2018-05-23T17:24:37Z",
          "expire" : "2018-06-15T10:00:00Z",
          "userId" : "U-XXX-YYY-Z",
          "details" : "Toulouse area  10000 km2  Sentinel-2",
          "estimatedTime" : "P5M",
          "processParameters" : {
            "inputs" : [{
                "id" : "input1",
                "title" : "input title 1",
                "formats" : [{
                    "mimeType" : "application/json",
                    "maximumMegabytes" : 3,
                    "default" : true
                  }, {
                    "mimeType" : "application/x-zipped-shp",
                    "maximumMegabytes" : 3
                  }]
              }],
            "outputs" : [{
                "id" : "output1",
                "title" : "output title 1",
                "formats" : [{
                    "mimeType" : "application/json",
                    "default" : true
                  }, {
                    "mimeType" : "application/x-zipped-shp"
                  }]
              }]
          },
          "alternativeQuotations" : {
            "id" : "Q12345B",
            "title" : "Mosaicing(lowpriority)",
            "description" : "High resolutionmosaicing(10 meters)",
            "price" : "5",
            "currency" : "EUR",
            "expire" : "2018-06-15T10:00:00Z",
            "details" : "Toulouse area – 10000 km2 – Sentinel-2",
            "estimatedTime" : "P20M"
          }
        }
      },
      "alternateQuotation" : {
        "type" : "object",
        "required" : ["id", "price", "currency", "expire", "created"],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the quotation"
          },
          "title" : {
            "type" : "string",
            "description" : "The name of the quotation"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of what the quotation is related to"
          },
          "price" : {
            "type" : "number",
            "format" : "double"
          },
          "currency" : {
            "type" : "string",
            "description" : "Currency code in ISO 4217 format"
          },
          "expire" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the quotation will expire"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the quotation was created"
          },
          "details" : {
            "type" : "string"
          },
          "estimatedTime" : {
            "type" : "string",
            "description" : "The estimated duration for the process to be performed (in ISO 8601 duration format)"
          }
        }
      },
      "bill" : {
        "type" : "object",
        "required" : ["id", "title", "price", "currency", "created", "userId"],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the bill"
          },
          "title" : {
            "type" : "string",
            "description" : "The name of the bill"
          },
          "description" : {
            "type" : "string",
            "description" : "A description of what is charged"
          },
          "price" : {
            "type" : "number",
            "format" : "double"
          },
          "currency" : {
            "type" : "string",
            "description" : "Currency code in ISO 4217 format"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The date and time (ISO 8601 format) when the bill was created"
          },
          "userId" : {
            "type" : "string",
            "description" : "User id that is charged for this bill"
          },
          "quotationId" : {
            "type" : "string",
            "description" : "Reference to the quotation id corresponding to this bill"
          }
        },
        "example" : {
          "id" : "B-12345-A",
          "title" : "Mosaicing",
          "description" : "High resolutionmosaicing (10 meters)",
          "price" : "15",
          "currency" : "EUR",
          "created" : "2018-05-23T17:24:37Z",
          "userId" : "U-XXX-YYY-Z",
          "quotationId" : "Q-12345-A"
        }
      },
      "execute" : {
        "type" : "object",
        "required" : ["outputs"],
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/input"
            }
          },
          "outputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/output"
            }
          }
        }
      },
      "input" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/dataType"
          }, {
            "type" : "object",
            "required" : ["value"],
            "properties" : {
              "value" : {
                "$ref" : "#/components/schemas/valueType"
              }
            }
          }]
      },
      "valueType" : {
        "oneOf" : [{
            "$ref" : "#/components/schemas/inlineValue"
          },
          {
            "$ref" : "#/components/schemas/valueReference"
          }
        ]
      },
      "valueReference" : {
        "type" : "string"
      },
      "inlineValue" : {
        "type" : "string"
      },
      "output" : {
        "allOf" : [{
            "$ref" : "#/components/schemas/dataType"
          }, {
            "type" : "object",
            "properties" : {
              "transmissionMode" : {
                "$ref" : "#/components/schemas/transmissionMode"
              }
            }
          }]
      },
      "dataType" : {
        "type" : "object",
        "required" : ["id"],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "format" : {
            "$ref" : "#/components/schemas/format"
          }
        }
      },
      "statusInfo" : {
        "type" : "object",
        "required" : ["status"],
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : ["accepted", "running", "successful", "failed"]
          },
          "message" : {
            "type" : "string"
          },
          "progress" : {
            "type" : "integer",
            "minimum" : 0,
            "maximum" : 100
          }
        }
      },
      "result" : {
        "type" : "object",
        "required" : ["outputs"],
        "properties" : {
          "outputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/outputInfo"
            }
          }
        }
      },
      "outputInfo" : {
        "type" : "object",
        "required" : ["id", "value", "x"],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      }
    }
  },
  "tags" : [{
      "name" : "Capabilities",
      "description" : "Essential characteristics of this API including information about the data."
    }, {
      "name" : "Processes",
      "description" : "Access to processes."
    }],
  "servers" : [{
      "description" : "SwaggerHub API Auto Mocking",
      "url" : "https://virtserver.swaggerhub.com/geoprocessing/WPS/0.1"
    }]
}